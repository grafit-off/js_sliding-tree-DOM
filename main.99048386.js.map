{"version":3,"sources":["scripts/main.js"],"names":["tree","document","querySelector","treeItems","querySelectorAll","animationSettings","duration","easing","forEach","item","children","length","triggerText","firstChild","textContent","trim","triggerMarkup","remove","insertAdjacentHTML","addEventListener","e","accordionTrigger","target","closest","accordionBody","nextElementSibling","dataset","opened","accardionClose","accardionOpen","body","animSettings","style","height","clientHeight","overflow","animate","scrollHeight"],"mappings":";AAAA,aAuDA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EApDA,IAAMA,EAAOC,SAASC,cAAc,SAC9BC,EAAgBH,EAAAA,EAAKI,iBAAiB,OACtCC,EAAoB,CACxBC,SAAU,IACVC,OAAQ,QAGVJ,EAAUK,QAAQ,SAAAC,GACZA,GAAAA,EAAKC,SAASC,OAAQ,CAClBC,IAAAA,EAAcH,EAAKI,WAAWC,YAAYC,OAC1CC,EAEAJ,8DAAAA,OAAAA,EAFN,yBAMAH,EAAKI,WAAWI,SAChBR,EAAKS,mBAAmB,aAAcF,MAI1ChB,EAAKmB,iBAAiB,QAAS,SAACC,GACxBC,IAAAA,EAAmBD,EAAEE,OAAOC,QAAQ,YAEtC,GAACF,EAAD,CAIEG,IAAAA,EAAgBH,EAAiBI,mBAEC,SAApCJ,EAAiBK,QAAQC,QAC3BC,EAAeJ,EAAenB,GAC9BgB,EAAiBK,QAAQC,QAAS,IAElCE,EAAcL,EAAenB,GAC7BgB,EAAiBK,QAAQC,QAAS,MAItC,IAAMC,EAAiB,SAACE,EAAMC,GAC5BD,EAAKE,MAAMC,OAASH,EAAKI,aAAe,KACxCJ,EAAKE,MAAMG,SAAW,SAEFL,EAAKM,QAAQ,CAAC,CAChCH,OAAQ,QACNF,GAEQZ,iBAAiB,SAAU,WACrCW,EAAKE,MAAMC,OAAS,SAIlBJ,EAAgB,SAACC,EAAMC,GACPD,EAAKM,QAAQ,CAAC,CAChCH,OAAQH,EAAKO,aAAe,OAC1BN,GAEQZ,iBAAiB,SAAU,WACrCW,EAAKE,MAAMC,OAAS","file":"main.99048386.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write code here\nconst tree = document.querySelector('.tree');\nconst treeItems = [...tree.querySelectorAll('li')];\nconst animationSettings = {\n  duration: 500,\n  easing: 'ease',\n};\n\ntreeItems.forEach(item => {\n  if (item.children.length) {\n    const triggerText = item.firstChild.textContent.trim();\n    const triggerMarkup = `\n      <span class=\"trigger\" data-opened=\"true\">\n        ${triggerText}\n      </span>\n    `;\n\n    item.firstChild.remove();\n    item.insertAdjacentHTML('afterbegin', triggerMarkup);\n  }\n});\n\ntree.addEventListener('click', (e) => {\n  const accordionTrigger = e.target.closest('.trigger');\n\n  if (!accordionTrigger) {\n    return;\n  }\n\n  const accordionBody = accordionTrigger.nextElementSibling;\n\n  if (accordionTrigger.dataset.opened === 'true') {\n    accardionClose(accordionBody, animationSettings);\n    accordionTrigger.dataset.opened = false;\n  } else {\n    accardionOpen(accordionBody, animationSettings);\n    accordionTrigger.dataset.opened = true;\n  }\n});\n\nconst accardionClose = (body, animSettings) => {\n  body.style.height = body.clientHeight + 'px';\n  body.style.overflow = 'hidden';\n\n  const animimation = body.animate([{\n    height: 0 + 'px',\n  }], animSettings);\n\n  animimation.addEventListener('finish', () => {\n    body.style.height = '0px';\n  });\n};\n\nconst accardionOpen = (body, animSettings) => {\n  const animimation = body.animate([{\n    height: body.scrollHeight + 'px',\n  }], animSettings);\n\n  animimation.addEventListener('finish', () => {\n    body.style.height = null;\n  });\n};\n"]}